/* tslint:disable */
/* eslint-disable */
/**
 * Master da Web API
 * The Master da Web API documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Ipv6Entity } from './Ipv6Entity';
import {
    Ipv6EntityFromJSON,
    Ipv6EntityFromJSONTyped,
    Ipv6EntityToJSON,
    Ipv6EntityToJSONTyped,
} from './Ipv6Entity';
import type { IpEntity } from './IpEntity';
import {
    IpEntityFromJSON,
    IpEntityFromJSONTyped,
    IpEntityToJSON,
    IpEntityToJSONTyped,
} from './IpEntity';

/**
 * 
 * @export
 * @interface VmNicEntity
 */
export interface VmNicEntity {
    /**
     * 
     * @type {number}
     * @memberof VmNicEntity
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof VmNicEntity
     */
    vmId: number;
    /**
     * 
     * @type {number}
     * @memberof VmNicEntity
     */
    ipId: number;
    /**
     * 
     * @type {number}
     * @memberof VmNicEntity
     */
    ipv6Id: number;
    /**
     * 
     * @type {string}
     * @memberof VmNicEntity
     */
    mode: VmNicEntityModeEnum;
    /**
     * 
     * @type {boolean}
     * @memberof VmNicEntity
     */
    primary: boolean;
    /**
     * 
     * @type {number}
     * @memberof VmNicEntity
     */
    rateLimit: number;
    /**
     * 
     * @type {Date}
     * @memberof VmNicEntity
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof VmNicEntity
     */
    updatedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof VmNicEntity
     */
    name: string;
    /**
     * 
     * @type {IpEntity}
     * @memberof VmNicEntity
     */
    ips: IpEntity;
    /**
     * 
     * @type {Ipv6Entity}
     * @memberof VmNicEntity
     */
    ipv6: Ipv6Entity;
}


/**
 * @export
 */
export const VmNicEntityModeEnum = {
    Fixed: 'fixed',
    Floating: 'floating'
} as const;
export type VmNicEntityModeEnum = typeof VmNicEntityModeEnum[keyof typeof VmNicEntityModeEnum];


/**
 * Check if a given object implements the VmNicEntity interface.
 */
export function instanceOfVmNicEntity(value: object): value is VmNicEntity {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('vmId' in value) || value['vmId'] === undefined) return false;
    if (!('ipId' in value) || value['ipId'] === undefined) return false;
    if (!('ipv6Id' in value) || value['ipv6Id'] === undefined) return false;
    if (!('mode' in value) || value['mode'] === undefined) return false;
    if (!('primary' in value) || value['primary'] === undefined) return false;
    if (!('rateLimit' in value) || value['rateLimit'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('ips' in value) || value['ips'] === undefined) return false;
    if (!('ipv6' in value) || value['ipv6'] === undefined) return false;
    return true;
}

export function VmNicEntityFromJSON(json: any): VmNicEntity {
    return VmNicEntityFromJSONTyped(json, false);
}

export function VmNicEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): VmNicEntity {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'vmId': json['vm_id'],
        'ipId': json['ip_id'],
        'ipv6Id': json['ipv6_id'],
        'mode': json['mode'],
        'primary': json['primary'],
        'rateLimit': json['rate_limit'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'name': json['name'],
        'ips': IpEntityFromJSON(json['ips']),
        'ipv6': Ipv6EntityFromJSON(json['ipv6']),
    };
}

  export function VmNicEntityToJSON(json: any): VmNicEntity {
      return VmNicEntityToJSONTyped(json, false);
  }

  export function VmNicEntityToJSONTyped(value?: VmNicEntity | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'vm_id': value['vmId'],
        'ip_id': value['ipId'],
        'ipv6_id': value['ipv6Id'],
        'mode': value['mode'],
        'primary': value['primary'],
        'rate_limit': value['rateLimit'],
        'created_at': ((value['createdAt']).toISOString()),
        'updated_at': ((value['updatedAt']).toISOString()),
        'name': value['name'],
        'ips': IpEntityToJSON(value['ips']),
        'ipv6': Ipv6EntityToJSON(value['ipv6']),
    };
}

