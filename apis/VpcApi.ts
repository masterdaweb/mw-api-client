/* tslint:disable */
/* eslint-disable */
/**
 * Master da Web API
 * The Master da Web API documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AddVmToVpcDto,
  VpcCreateDto,
  VpcEntity,
  VpcVmsEntity,
} from '../models/index';
import {
    AddVmToVpcDtoFromJSON,
    AddVmToVpcDtoToJSON,
    VpcCreateDtoFromJSON,
    VpcCreateDtoToJSON,
    VpcEntityFromJSON,
    VpcEntityToJSON,
    VpcVmsEntityFromJSON,
    VpcVmsEntityToJSON,
} from '../models/index';

export interface VpcControllerAddVmToVpcRequest {
    addVmToVpcDto: AddVmToVpcDto;
}

export interface VpcControllerCreateRequest {
    vpcCreateDto: VpcCreateDto;
}

/**
 * 
 */
export class VpcApi extends runtime.BaseAPI {

    /**
     */
    async vpcControllerAddVmToVpcRaw(requestParameters: VpcControllerAddVmToVpcRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<VpcVmsEntity>> {
        if (requestParameters['addVmToVpcDto'] == null) {
            throw new runtime.RequiredError(
                'addVmToVpcDto',
                'Required parameter "addVmToVpcDto" was null or undefined when calling vpcControllerAddVmToVpc().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/vpc/vm`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AddVmToVpcDtoToJSON(requestParameters['addVmToVpcDto']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => VpcVmsEntityFromJSON(jsonValue));
    }

    /**
     */
    async vpcControllerAddVmToVpc(requestParameters: VpcControllerAddVmToVpcRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<VpcVmsEntity> {
        const response = await this.vpcControllerAddVmToVpcRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async vpcControllerCreateRaw(requestParameters: VpcControllerCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<VpcEntity>> {
        if (requestParameters['vpcCreateDto'] == null) {
            throw new runtime.RequiredError(
                'vpcCreateDto',
                'Required parameter "vpcCreateDto" was null or undefined when calling vpcControllerCreate().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/vpc`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: VpcCreateDtoToJSON(requestParameters['vpcCreateDto']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => VpcEntityFromJSON(jsonValue));
    }

    /**
     */
    async vpcControllerCreate(requestParameters: VpcControllerCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<VpcEntity> {
        const response = await this.vpcControllerCreateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async vpcControllerIndexRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<VpcEntity>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/vpc`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(VpcEntityFromJSON));
    }

    /**
     */
    async vpcControllerIndex(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<VpcEntity>> {
        const response = await this.vpcControllerIndexRaw(initOverrides);
        return await response.value();
    }

}
