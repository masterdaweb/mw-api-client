"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Master da Web API
 * The Master da Web API documentation
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.WhmcsApi = void 0;
const runtime = require("../runtime");
/**
 *
 */
class WhmcsApi extends runtime.BaseAPI {
    /**
     */
    async whmcsControllerLoginRaw(initOverrides) {
        const queryParameters = {};
        const headerParameters = {};
        const response = await this.request({
            path: `/whmcs/login`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse(response);
        }
        else {
            return new runtime.TextApiResponse(response);
        }
    }
    /**
     */
    async whmcsControllerLogin(initOverrides) {
        const response = await this.whmcsControllerLoginRaw(initOverrides);
        return await response.value();
    }
    /**
     */
    async whmcsControllerLogoutRaw(initOverrides) {
        const queryParameters = {};
        const headerParameters = {};
        const response = await this.request({
            path: `/whmcs/logout`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.VoidApiResponse(response);
    }
    /**
     */
    async whmcsControllerLogout(initOverrides) {
        await this.whmcsControllerLogoutRaw(initOverrides);
    }
    /**
     */
    async whmcsControllerMeRaw(initOverrides) {
        const queryParameters = {};
        const headerParameters = {};
        const response = await this.request({
            path: `/whmcs/me`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.VoidApiResponse(response);
    }
    /**
     */
    async whmcsControllerMe(initOverrides) {
        await this.whmcsControllerMeRaw(initOverrides);
    }
    /**
     */
    async whmcsControllerRefreshTokensRaw(initOverrides) {
        const queryParameters = {};
        const headerParameters = {};
        const response = await this.request({
            path: `/whmcs/refresh`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.VoidApiResponse(response);
    }
    /**
     */
    async whmcsControllerRefreshTokens(initOverrides) {
        await this.whmcsControllerRefreshTokensRaw(initOverrides);
    }
    /**
     */
    async whmcsControllerSsoRaw(initOverrides) {
        const queryParameters = {};
        const headerParameters = {};
        const response = await this.request({
            path: `/whmcs/sso`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.VoidApiResponse(response);
    }
    /**
     */
    async whmcsControllerSso(initOverrides) {
        await this.whmcsControllerSsoRaw(initOverrides);
    }
}
exports.WhmcsApi = WhmcsApi;
