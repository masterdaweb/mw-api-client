"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Master da Web API
 * The Master da Web API documentation
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FloatingIpApi = void 0;
const runtime = require("../runtime");
/**
 *
 */
class FloatingIpApi extends runtime.BaseAPI {
    /**
     */
    async floatingIpControllerEligibleVmsRaw(initOverrides) {
        const queryParameters = {};
        const headerParameters = {};
        const response = await this.request({
            path: `/floating-ip/eligible-vms/{ip_id}`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.VoidApiResponse(response);
    }
    /**
     */
    async floatingIpControllerEligibleVms(initOverrides) {
        await this.floatingIpControllerEligibleVmsRaw(initOverrides);
    }
    /**
     */
    async floatingIpControllerListRaw(initOverrides) {
        const queryParameters = {};
        const headerParameters = {};
        const response = await this.request({
            path: `/floating-ip`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.VoidApiResponse(response);
    }
    /**
     */
    async floatingIpControllerList(initOverrides) {
        await this.floatingIpControllerListRaw(initOverrides);
    }
    /**
     */
    async floatingIpControllerMoveFloatingIpRaw(initOverrides) {
        const queryParameters = {};
        const headerParameters = {};
        const response = await this.request({
            path: `/floating-ip/move`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.VoidApiResponse(response);
    }
    /**
     */
    async floatingIpControllerMoveFloatingIp(initOverrides) {
        await this.floatingIpControllerMoveFloatingIpRaw(initOverrides);
    }
    /**
     */
    async floatingIpControllerSetModeRaw(initOverrides) {
        const queryParameters = {};
        const headerParameters = {};
        const response = await this.request({
            path: `/floating-ip/mode`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.VoidApiResponse(response);
    }
    /**
     */
    async floatingIpControllerSetMode(initOverrides) {
        await this.floatingIpControllerSetModeRaw(initOverrides);
    }
}
exports.FloatingIpApi = FloatingIpApi;
