"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Master da Web API
 * The Master da Web API documentation
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.VmNicEntityModeEnum = void 0;
exports.instanceOfVmNicEntity = instanceOfVmNicEntity;
exports.VmNicEntityFromJSON = VmNicEntityFromJSON;
exports.VmNicEntityFromJSONTyped = VmNicEntityFromJSONTyped;
exports.VmNicEntityToJSON = VmNicEntityToJSON;
exports.VmNicEntityToJSONTyped = VmNicEntityToJSONTyped;
const Ipv6Entity_1 = require("./Ipv6Entity");
const IpEntity_1 = require("./IpEntity");
/**
 * @export
 */
exports.VmNicEntityModeEnum = {
    Fixed: 'fixed',
    Floating: 'floating'
};
/**
 * Check if a given object implements the VmNicEntity interface.
 */
function instanceOfVmNicEntity(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('vmId' in value) || value['vmId'] === undefined)
        return false;
    if (!('ipId' in value) || value['ipId'] === undefined)
        return false;
    if (!('ipv6Id' in value) || value['ipv6Id'] === undefined)
        return false;
    if (!('mode' in value) || value['mode'] === undefined)
        return false;
    if (!('primary' in value) || value['primary'] === undefined)
        return false;
    if (!('rateLimit' in value) || value['rateLimit'] === undefined)
        return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined)
        return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined)
        return false;
    if (!('name' in value) || value['name'] === undefined)
        return false;
    if (!('ips' in value) || value['ips'] === undefined)
        return false;
    if (!('ipv6' in value) || value['ipv6'] === undefined)
        return false;
    return true;
}
function VmNicEntityFromJSON(json) {
    return VmNicEntityFromJSONTyped(json, false);
}
function VmNicEntityFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'vmId': json['vm_id'],
        'ipId': json['ip_id'],
        'ipv6Id': json['ipv6_id'],
        'mode': json['mode'],
        'primary': json['primary'],
        'rateLimit': json['rate_limit'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'name': json['name'],
        'ips': (0, IpEntity_1.IpEntityFromJSON)(json['ips']),
        'ipv6': (0, Ipv6Entity_1.Ipv6EntityFromJSON)(json['ipv6']),
    };
}
function VmNicEntityToJSON(json) {
    return VmNicEntityToJSONTyped(json, false);
}
function VmNicEntityToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'vm_id': value['vmId'],
        'ip_id': value['ipId'],
        'ipv6_id': value['ipv6Id'],
        'mode': value['mode'],
        'primary': value['primary'],
        'rate_limit': value['rateLimit'],
        'created_at': ((value['createdAt']).toISOString()),
        'updated_at': ((value['updatedAt']).toISOString()),
        'name': value['name'],
        'ips': (0, IpEntity_1.IpEntityToJSON)(value['ips']),
        'ipv6': (0, Ipv6Entity_1.Ipv6EntityToJSON)(value['ipv6']),
    };
}
