"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Master da Web API
 * The Master da Web API documentation
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfVmHostnameEntity = instanceOfVmHostnameEntity;
exports.VmHostnameEntityFromJSON = VmHostnameEntityFromJSON;
exports.VmHostnameEntityFromJSONTyped = VmHostnameEntityFromJSONTyped;
exports.VmHostnameEntityToJSON = VmHostnameEntityToJSON;
exports.VmHostnameEntityToJSONTyped = VmHostnameEntityToJSONTyped;
const HostnameDomainEntity_1 = require("./HostnameDomainEntity");
/**
 * Check if a given object implements the VmHostnameEntity interface.
 */
function instanceOfVmHostnameEntity(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('vmId' in value) || value['vmId'] === undefined)
        return false;
    if (!('hostnameDomainId' in value) || value['hostnameDomainId'] === undefined)
        return false;
    if (!('hostname' in value) || value['hostname'] === undefined)
        return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined)
        return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined)
        return false;
    if (!('hostnameDomains' in value) || value['hostnameDomains'] === undefined)
        return false;
    return true;
}
function VmHostnameEntityFromJSON(json) {
    return VmHostnameEntityFromJSONTyped(json, false);
}
function VmHostnameEntityFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'vmId': json['vm_id'],
        'hostnameDomainId': json['hostname_domain_id'],
        'hostname': json['hostname'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'hostnameDomains': (0, HostnameDomainEntity_1.HostnameDomainEntityFromJSON)(json['hostname_domains']),
    };
}
function VmHostnameEntityToJSON(json) {
    return VmHostnameEntityToJSONTyped(json, false);
}
function VmHostnameEntityToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'vm_id': value['vmId'],
        'hostname_domain_id': value['hostnameDomainId'],
        'hostname': value['hostname'],
        'created_at': ((value['createdAt']).toISOString()),
        'updated_at': ((value['updatedAt']).toISOString()),
        'hostname_domains': (0, HostnameDomainEntity_1.HostnameDomainEntityToJSON)(value['hostnameDomains']),
    };
}
